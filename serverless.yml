# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: levy-functions

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

package:
  include:
   - bin/**
   - lambda/handler.js

functions:
  fangoostcall:
    handler: lambda/handler.fangoostcall
    events:
      - http:
          path: version/call/price/fangoost
          method: post
          cors: true
  fangoostcalldelta:
    handler: lambda/handler.fangoostcalldelta
    events:
      - http:
          path: version/call/delta/fangoost
          method: post
          cors: true
  fangoostcalltheta:
    handler: lambda/handler.fangoostcalltheta
    events:
      - http:
          path: version/call/theta/fangoost
          method: post
          cors: true
  fangoostcallgamma:
    handler: lambda/handler.fangoostcallgamma
    events:
      - http:
          path: version/call/gamma/fangoost
          method: post
          cors: true
  fangoostput:
    handler: lambda/handler.fangoostput
    events:
      - http:
          path: version/put/price/fangoost
          method: post
          cors: true
  fangoostputdelta:
    handler: lambda/handler.fangoostputdelta
    events:
      - http:
          path: version/put/delta/fangoost
          method: post
          cors: true
  fangoostputtheta:
    handler: lambda/handler.fangoostputtheta
    events:
      - http:
          path: version/put/theta/fangoost
          method: post
          cors: true
  fangoostputgamma:
    handler: lambda/handler.fangoostputgamma
    events:
      - http:
          path: version/put/gamma/fangoost
          method: post
          cors: true

  carrmadanput:
    handler: lambda/handler.carrmadanput
    events:
      - http:
          path: version/put/price/carrmadan
          method: post
          cors: true

  carrmadancall:
    handler: lambda/handler.carrmadancall
    events:
      - http:
          path: version/call/price/carrmadan
          method: post
          cors: true

  fstsput:
    handler: lambda/handler.fstsput
    events:
      - http:
          path: version/put/price/fsts
          method: post
          cors: true
  fstscall:
    handler: lambda/handler.fstscall
    events:
      - http:
          path: version/call/price/fsts
          method: post
          cors: true
  fstsputdelta:
    handler: lambda/handler.fstsputdelta
    events:
      - http:
          path: version/put/delta/fsts
          method: post
          cors: true
  fstscalldelta:
    handler: lambda/handler.fstscalldelta
    events:
      - http:
          path: version/call/delta/fsts
          method: post
          cors: true
  fstsputtheta:
    handler: lambda/handler.fstsputtheta
    events:
      - http:
          path: version/put/theta/fsts
          method: post
          cors: true
  fstscalltheta:
    handler: lambda/handler.fstscalltheta
    events:
      - http:
          path: version/call/theta/fsts
          method: post
          cors: true
  fstsputgamma:
    handler: lambda/handler.fstsputgamma
    events:
      - http:
          path: version/put/gamma/fsts
          method: post
          cors: true
  fstscallgamma:
    handler: lambda/handler.fstscallgamma
    events:
      - http:
          path: version/call/gamma/fsts
          method: post
          cors: true
  VaR:
    handler: lambda/handler.VaR
    events:
      - http:
          path: version/density/var
          method: post
          cors: true
  density:
    handler: lambda/handler.density
    events:
      - http:
          path: version/density/raw
          method: post
          cors: true
  fullmodel:
    handler: lambda/handler.fullmodel
    memorySize: 3008 # optional, in MB, default is 1024
    timeout: 60 # optional, in seconds, default is 6
    events:
      - http:
          path: version/call/calibration
          method: post
          cors: true
      

